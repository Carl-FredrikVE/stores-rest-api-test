{
	"info": {
		"_postman_id": "297f8753-e019-4ad3-a501-23e40a3ccd36",
		"name": "User create store and item",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "97eb9f61-d21a-4964-89b5-d148f32b88b1",
						"exec": [
							"postman.clearEnvironmentVariable(\"access_token\");\r",
							"\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"User created successfully\"] = jsonData.message === 'User created successfully.';\r",
							"\r",
							"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');\r",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"user15\",\r\n    \"password\": \"abcxyz\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "/auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0156c39d-1795-4891-aeae-5238cd4d06e3",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
							"\r",
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
							"tests[\"Body contains access_token\"] = responseBody.has(\"access_token\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"user15\",\r\n    \"password\": \"abcxyz\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/auth",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "/store/test_store",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95251785-5b32-4d68-962f-5b133b07e4ac",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Store name is returned\"] = jsonData.name === 'test_store';\r",
							"tests[\"Store id is returned\"] = jsonData.id === 1;\r",
							"//tests[\"Store items are an empty list\"] = jsonData.items.length === 0;\r",
							"\r",
							"tests[\"Successful POST request\"] = responseCode.code === 201;\r",
							"tests[\"Response time is less than 200\"] = responseTime < 200;\r",
							"\r",
							"tests[\"Content-Type is present in response\"] = postman.getResponseHeader(\"Content-Type\");\r",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';\r",
							"\r",
							"postman.setEnvironmentVariable(\"store_id\", jsonData.id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"store_id\": {{store_id}}\r\n}"
				},
				"url": {
					"raw": "{{url}}/store/test_store",
					"host": [
						"{{url}}"
					],
					"path": [
						"store",
						"test_store"
					]
				}
			},
			"response": []
		},
		{
			"name": "/item/test_item in test_store",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dca8da90-091f-4395-92ac-e82d819a2393",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Item name is returned\"] = jsonData.name === 'test_item';\r",
							"tests[\"Item price is returned\"] = jsonData.price === 17.99;\r",
							"tests[\"Successful POST request\"] = responseCode.code === 201;\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
							"\r",
							"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');\r",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "JWT"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\": \"test_item\",\r\n\"price\": 17.99,\r\n\"store_id\": {{store_id}}\r\n}"
				},
				"url": {
					"raw": "{{url}}/item/test_item",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"test_item"
					]
				}
			},
			"response": []
		},
		{
			"name": "/stores",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c952d267-d151-4612-b420-e0b9b5debb25",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Store 'test_store' is returned\"] = jsonData.stores[0].name === 'test_store';\r",
							"tests[\"ID of store 'test_store' is returned\"] = jsonData.stores[0].id === parseInt(environment.store_id);\r",
							"tests[\"Item 'test_item' is returned inside 'test_store'\"] = jsonData.stores[0].items[0].name === 'test_item';\r",
							"tests[\"Item 'test_item' price is returned inside 'test_store'\"] = jsonData.stores[0].items[0].price === 17.99;\r",
							"\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
							"\r",
							"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');\r",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/stores",
					"host": [
						"{{url}}"
					],
					"path": [
						"stores"
					]
				}
			},
			"response": []
		},
		{
			"name": "/item/my_item",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8bde305b-7dd0-4113-91d6-3dd774941190",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Message is returned\"] = jsonData.message === 'Item deleted';\r",
							"tests[\"Successful POST request\"] = responseCode.code === 200;\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
							"\r",
							"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');\r",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\": \"test_item\",\r\n\"price\": 17.99,\r\n\"store_id\": {{store_id}}\r\n}"
				},
				"url": {
					"raw": "{{url}}/item/test_item",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"test_item"
					]
				}
			},
			"response": []
		},
		{
			"name": "/store/<name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "480b8b53-cfa9-4b7f-a58e-dba33dff2198",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Store name is returned\"] = jsonData.message === 'Store deleted';\r",
							"tests[\"Successful POST request\"] = responseCode.code === 200;\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
							"\r",
							"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');\r",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\": \"test_store\",\r\n\"price\": 17.99,\r\n\"store_id\": {{store_id}}\r\n}"
				},
				"url": {
					"raw": "{{url}}/store/test_store",
					"host": [
						"{{url}}"
					],
					"path": [
						"store",
						"test_store"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}